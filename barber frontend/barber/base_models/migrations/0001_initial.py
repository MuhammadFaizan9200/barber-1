# Generated by Django 4.2.5 on 2023-09-05 17:52

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='WebUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=200, null=True)),
                ('last_name', models.CharField(max_length=200, null=True)),
                ('email', models.CharField(max_length=500, null=True)),
                ('password', models.CharField(max_length=500, null=True)),
                ('user_type', models.IntegerField(choices=[('User-customer', 1), ('Individual-barber', 2), ('Business-manger', 3)], null=True)),
                ('activate', models.CharField(max_length=500, null=True)),
                ('designation', models.IntegerField(null=True)),
                ('verification_code', models.IntegerField(null=True)),
                ('edited_time', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'web_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Designations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('designation_name', models.CharField(max_length=200, null=True)),
                ('edited_time', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='designation_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='designation_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'designation',
            },
        ),
        migrations.CreateModel(
            name='DesignationsCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('category_name', models.CharField(max_length=200, null=True)),
                ('edited_time', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='designationcategory_created_by', to=settings.AUTH_USER_MODEL)),
                ('designation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='designation_set', to='base_models.designations')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='designationcategory_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'designation_category',
            },
        ),
        migrations.CreateModel(
            name='WebUserDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('business_name', models.CharField(max_length=200, null=True)),
                ('business_cell', models.CharField(max_length=200, null=True)),
                ('business_address', models.CharField(max_length=200, null=True)),
                ('business_website', models.CharField(max_length=200, null=True)),
                ('postal_code', models.CharField(max_length=200, null=True)),
                ('city', models.CharField(max_length=200, null=True)),
                ('year_of_expereince', models.CharField(max_length=200, null=True)),
                ('language', models.CharField(max_length=200, null=True)),
                ('edited_time', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webuser_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webuser_updated_by', to=settings.AUTH_USER_MODEL)),
                ('web_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='web_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'web_user_detail',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('service_name', models.CharField(max_length=200, null=True)),
                ('price', models.CharField(max_length=200, null=True)),
                ('time_duration', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=200, null=True)),
                ('edited_time', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_created_by', to=settings.AUTH_USER_MODEL)),
                ('service_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_set', to='base_models.designationscategory')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'service',
            },
        ),
    ]
